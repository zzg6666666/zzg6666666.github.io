import{_ as p,r as i,o as l,c,b as n,d as s,e,a as t}from"./app-9QopI4S6.js";const o={},r=n("h2",{id:"前提",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前提","aria-hidden":"true"},"#"),s(" 前提")],-1),d=n("strong",null,"ST-LINK",-1),u=n("strong",null,"SEGGER RTT",-1),k=n("strong",null,"PyOCD",-1),m=n("strong",null,"J-link",-1),b={href:"https://blog.csdn.net/qq_36973838/article/details/131541025",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="安装软件" tabindex="-1"><a class="header-anchor" href="#安装软件" aria-hidden="true">#</a> 安装软件</h2><p>安装pyOCD，所有安装过程中，必要时请搭配科学上网。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> pyocd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看设备</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pyocd list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以检测到有一个<strong>ST-Link</strong>的设备。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>base<span class="token punctuation">)</span> zzg@192 ~ % pyocd list
  <span class="token comment">#   Probe/Board    Unique ID                  Target  </span>
--------------------------------------------------------
  <span class="token number">0</span>   STM32 STLink   53001300120000304B57534E   n/a     
<span class="token punctuation">(</span>base<span class="token punctuation">)</span> zzg@192 ~ % 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看pyocd所支持的芯片：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pyocd list <span class="token parameter variable">--targets</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果芯片的<strong>name</strong>所对应的source是<strong>builtin</strong>状态，那么不需要安装pack。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>base<span class="token punctuation">)</span> zzg@192 ~ % pyocd list <span class="token parameter variable">--targets</span>

  Name                      Vendor                   Part Number                  Families                    Source   
-----------------------------------------------------------------------------------------------------------------------
  air001                    AirM2M                   Air001                                                   <span class="token builtin class-name">builtin</span>  
  air32f103xb               AirM2M                   Air32F103xB                                              <span class="token builtin class-name">builtin</span>  
  air32f103xc               AirM2M                   Air32F103xC                                              <span class="token builtin class-name">builtin</span>  
  air32f103xe               AirM2M                   Air32F103xE                                              <span class="token builtin class-name">builtin</span>  
  air32f103xg               AirM2M                   Air32F103xG                                              <span class="token builtin class-name">builtin</span>  
  air32f103xp               AirM2M                   Air32F103xP                                              <span class="token builtin class-name">builtin</span>  
  cc3220sf                  Texas Instruments        CC3220SF                                                 <span class="token builtin class-name">builtin</span>  
  cortex_m                  Generic                  CoreSightTarget                                          <span class="token builtin class-name">builtin</span>  
  cy8c64_sysap              Cypress                  cy8c64_sysap                                             <span class="token builtin class-name">builtin</span>  
  cy8c64x5_cm0              Cypress                  cy8c64x5_cm0                                             <span class="token builtin class-name">builtin</span>  
  cy8c64x5_cm0_full_flash   Cypress                  cy8c64x5_cm0_full_flash                                  <span class="token builtin class-name">builtin</span>  
  cy8c64x5_cm4              Cypress                  cy8c64x5_cm4                                             <span class="token builtin class-name">builtin</span>  
  cy8c64x5_cm4_full_flash   Cypress                  cy8c64x5_cm4_full_flash                                  <span class="token builtin class-name">builtin</span>  
  cy8c64xa_cm0              Cypress                  cy8c64xA_cm0                                             <span class="token builtin class-name">builtin</span>  
  cy8c64xa_cm0_full_flash   Cypress                  cy8c64xA_cm0_full_flash                                  <span class="token builtin class-name">builtin</span> 
 -----------------------------------------------------------------------------------------------------------------------
  stm32f103c4               STMicroelectronics       STM32F103C4                  STM32F1 Series, STM32F103   pack     
  stm32f103c6               STMicroelectronics       STM32F103C6                  STM32F1 Series, STM32F103   pack     
  stm32f103c8               STMicroelectronics       STM32F103C8                  STM32F1 Series, STM32F103   pack     
  stm32f103cb               STMicroelectronics       STM32F103CB                  STM32F1 Series, STM32F103   pack     
  stm32f103r4               STMicroelectronics       STM32F103R4                  STM32F1 Series, STM32F103   pack    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我这里使用的芯片是STM32F103C8T6，需要安装pack。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pyocd pack <span class="token function">install</span> STM32F103C8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置代码" tabindex="-1"><a class="header-anchor" href="#配置代码" aria-hidden="true">#</a> 配置代码</h2>`,14),g={href:"https://www.segger.com/downloads/jlink/",target:"_blank",rel:"noopener noreferrer"},h=t(`<p><img src="https://s21.ax1x.com/2024/03/18/pFRwUAK.png" alt="pFRwUAK.png"></p><p>安装完成后，在以下目录，找到移植的文件：<em><strong>SEGGER_RTT_V796a.tgz</strong></em>，不同系统的文件格式可能不一样。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/安装目录/SEGGER/JLink_V796a/Samples/RTT/SEGGER_RTT_V796a.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将文件解压，将<code>Config\\SEGGER_RTT_Conf.h</code>和<code>RTT\\SEGGER_RTT.h</code>放入工程的<code>Inc</code>文件夹中，将<code>RTT\\SEGGER_RTT_printf.c</code>和<code>RTT\\SEGGER_RTT.c</code>放入到工程的<code>Src</code>文件夹中。如果你使用的<strong>keil</strong>，需要将.c文件添加到grups，将.h文件添加到头文件路径。如果你使用的是<strong>makefile</strong>，需要Makefile中添加.c文件和.h路径。</p><h3 id="使用pyocd监控log" tabindex="-1"><a class="header-anchor" href="#使用pyocd监控log" aria-hidden="true">#</a> 使用pyocd监控log</h3><h3 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;SEGGER_RTT.h&quot;</span></span>
<span class="token keyword">int</span> <span class="token function">SEGGER_RTT_printf</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> BufferIndex<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> sFormat<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;SEGGER_RTT.h&quot;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token function">SEGGER_RTT_printf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello world!\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="连接设备" tabindex="-1"><a class="header-anchor" href="#连接设备" aria-hidden="true">#</a> 连接设备</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pyocd rtt <span class="token parameter variable">-t</span> STM32F103C8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>连接成功，并打印日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>s<span class="token punctuation">(</span>base<span class="token punctuation">)</span> zzg@192 ~ % pyocd rtt <span class="token parameter variable">-t</span> STM32F103C8
0001572 I Target <span class="token builtin class-name">type</span> is stm32f103c8 <span class="token punctuation">[</span>board<span class="token punctuation">]</span>
0001617 I DP IDR <span class="token operator">=</span> 0x1ba01477 <span class="token punctuation">(</span>v1 rev1<span class="token punctuation">)</span> <span class="token punctuation">[</span>dap<span class="token punctuation">]</span>
0001617 I debugvar <span class="token string">&#39;DbgMCU_CR&#39;</span> <span class="token operator">=</span> 0x7 <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>pack_target<span class="token punctuation">]</span>
0001625 I AHB-AP<span class="token comment">#0 IDR = 0x14770011 (AHB-AP var1 rev1) [discovery]</span>
0001628 I AHB-AP<span class="token comment">#0 Class 0x1 ROM table #0 @ 0xe00ff000 (designer=020:ST part=410) [rom_table]</span>
0001630 I <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>e000e000:SCS v7-M <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token number">14</span> <span class="token assign-left variable">designer</span><span class="token operator">=</span>43b:Arm <span class="token assign-left variable">part</span><span class="token operator">=</span>00<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> <span class="token punctuation">[</span>rom_table<span class="token punctuation">]</span>
0001631 I <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>e0001000:DWT v7-M <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token number">14</span> <span class="token assign-left variable">designer</span><span class="token operator">=</span>43b:Arm <span class="token assign-left variable">part</span><span class="token operator">=</span>00<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">[</span>rom_table<span class="token punctuation">]</span>
0001632 I <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>e0002000:FPB v7-M <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token number">14</span> <span class="token assign-left variable">designer</span><span class="token operator">=</span>43b:Arm <span class="token assign-left variable">part</span><span class="token operator">=</span>00<span class="token operator"><span class="token file-descriptor important">3</span>&gt;</span> <span class="token punctuation">[</span>rom_table<span class="token punctuation">]</span>
0001633 I <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>e0000000:ITM v7-M <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token number">14</span> <span class="token assign-left variable">designer</span><span class="token operator">=</span>43b:Arm <span class="token assign-left variable">part</span><span class="token operator">=</span>00<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token punctuation">[</span>rom_table<span class="token punctuation">]</span>
0001636 I <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>e0040000:TPIU M3 <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token number">9</span> <span class="token assign-left variable">designer</span><span class="token operator">=</span>43b:Arm <span class="token assign-left variable">part</span><span class="token operator">=</span><span class="token number">923</span> <span class="token assign-left variable">devtype</span><span class="token operator">=</span><span class="token number">11</span> <span class="token assign-left variable">archid</span><span class="token operator">=</span>0000 <span class="token assign-left variable">devid</span><span class="token operator">=</span>ca0:0:<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> <span class="token punctuation">[</span>rom_table<span class="token punctuation">]</span>
0001640 I CPU core <span class="token comment">#0: Cortex-M3 r1p1, v7.0-M architecture [cortex_m]</span>
0001640 I Setting core <span class="token comment">#0 (Cortex-M3) default reset sequence to ResetSystem [pack_target]</span>
0001642 I <span class="token number">4</span> hardware watchpoints <span class="token punctuation">[</span>dwt<span class="token punctuation">]</span>
0001645 I <span class="token number">6</span> hardware breakpoints, <span class="token number">4</span> literal comparators <span class="token punctuation">[</span>fpb<span class="token punctuation">]</span>
0001734 I <span class="token number">3</span> up channels and <span class="token number">3</span> down channels found <span class="token punctuation">[</span>rtt_cmd<span class="token punctuation">]</span>
0001734 I Reading from up channel <span class="token number">0</span> <span class="token punctuation">(</span><span class="token string">&quot;Terminal&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rtt_cmd<span class="token punctuation">]</span>
0001736 I Writing to down channel <span class="token number">0</span> <span class="token punctuation">(</span><span class="token string">&quot;Terminal&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>rtt_cmd<span class="token punctuation">]</span>
Hello world<span class="token operator">!</span>
Hello world<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function _(f,T){const a=i("ExternalLinkIcon");return l(),c("div",null,[r,n("p",null,[s("通过RTT输出日志，可以不占额外的引脚和外设，速度非常快，几乎不影响程序的实时性。硬件需要搭配使用"),d,s("，代码需添加"),u,s("，软件采用的是"),k,s("。如果你采用的调试器是"),m,s("，请参考这篇博客:"),n("a",b,[s("基于J-Link RTT Viewer输出日志"),e(a)])]),v,n("p",null,[s("需要安装J-Link驱动，"),n("a",g,[s("前往官网下载"),e(a)]),s("，根据系统选择对应的版本安装即可")]),h])}const S=p(o,[["render",_],["__file","RTTdayinlog.html.vue"]]);export{S as default};
